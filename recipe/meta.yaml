{% set name = "snowflake-snowpark-python" %}
{% set version = "1.41.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz
  sha256: 19c90354eb103c37c6502e5b880b47235db6abb0fac1910c022aa98740331785

build:
  # The build number of this package should always start from 100
  # for new versions. For more information ask the CODEOWNERS.
  number: 100
  skip: true  # [py<39 or py>313]
  script_env:
    - SNOWFLAKE_IS_PYTHON_RUNTIME_TEST=1
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -v

requirements:
  host:
    - python
    - pip
    - setuptools >=40.6.0
    - wheel
    # For the following protobuf pinnings,
    # have a look at their recipe/meta.yaml
    # Snowpark IR
    - protobuf ==3.20.1  # [py<=310]
    - protobuf ==4.25.3  # [py>310]
    - mypy-protobuf
  run:
    - python
    - cloudpickle >=1.6.0,<=3.1.1,!=2.1.0,!=2.2.0
    - snowflake-connector-python >=3.17.0,<5.0.0
    - typing-extensions >=4.1.0,<5.0.0
    - pyyaml
    # Snowpark IR
    - protobuf >=3.20,<6.32
    - python-dateutil
    - tzlocal
  run_constrained:
    # modin
    - pandas <=2.3.1
    - modin >=0.36.0,<0.38.0
    # opentelemetry
    - opentelemetry-api >=1.0.0,<2.0.0
    - opentelemetry-sdk >=1.0.0,<2.0.0
    # secure-local-storage
    - keyring >=23.1.0,<26.0.0
    - snowflake-ml-python >=1.8.0  # [py<312]

test:
  requires:
    - pip
  imports:
    - snowflake
    - snowflake.snowpark
    - snowflake.snowpark._internal
    - snowflake.snowpark._internal.analyzer
    - snowflake.snowpark._internal.analyzer.analyzer
    - snowflake.snowpark._internal.analyzer.analyzer_utils
    - snowflake.snowpark._internal.analyzer.binary_expression
    - snowflake.snowpark._internal.analyzer.binary_plan_node
    - snowflake.snowpark._internal.analyzer.datatype_mapper
    - snowflake.snowpark._internal.analyzer.expression
    - snowflake.snowpark._internal.analyzer.grouping_set
    - snowflake.snowpark._internal.analyzer.metadata_utils
    - snowflake.snowpark._internal.analyzer.query_plan_analysis_utils
    - snowflake.snowpark._internal.analyzer.schema_utils
    - snowflake.snowpark._internal.analyzer.select_statement
    - snowflake.snowpark._internal.analyzer.snowflake_plan
    - snowflake.snowpark._internal.analyzer.snowflake_plan_node
    - snowflake.snowpark._internal.analyzer.sort_expression
    - snowflake.snowpark._internal.analyzer.table_function
    - snowflake.snowpark._internal.analyzer.table_merge_expression
    - snowflake.snowpark._internal.analyzer.unary_expression
    - snowflake.snowpark._internal.analyzer.unary_plan_node
    - snowflake.snowpark._internal.analyzer.window_expression
    - snowflake.snowpark._internal.ast.batch
    - snowflake.snowpark._internal.ast.utils
    - snowflake.snowpark._internal.code_generation
    - snowflake.snowpark._internal.compiler.cte_utils
    - snowflake.snowpark._internal.compiler.large_query_breakdown
    - snowflake.snowpark._internal.compiler.query_generator
    - snowflake.snowpark._internal.compiler.repeated_subquery_elimination
    - snowflake.snowpark._internal.compiler.telemetry_constants
    - snowflake.snowpark._internal.compiler.utils
    - snowflake.snowpark._internal.data_source
    - snowflake.snowpark._internal.data_source.datasource_partitioner
    - snowflake.snowpark._internal.data_source.datasource_reader
    - snowflake.snowpark._internal.data_source.datasource_typing
    - snowflake.snowpark._internal.data_source.dbms_dialects
    - snowflake.snowpark._internal.data_source.dbms_dialects.base_dialect
    - snowflake.snowpark._internal.data_source.dbms_dialects.databricks_dialect
    - snowflake.snowpark._internal.data_source.dbms_dialects.mysql_dialect
    - snowflake.snowpark._internal.data_source.dbms_dialects.oracledb_dialect
    - snowflake.snowpark._internal.data_source.dbms_dialects.postgresql_dialect
    - snowflake.snowpark._internal.data_source.dbms_dialects.sqlite3_dialect
    - snowflake.snowpark._internal.data_source.dbms_dialects.sqlserver_dialect
    - snowflake.snowpark._internal.data_source.drivers
    - snowflake.snowpark._internal.data_source.drivers.base_driver
    - snowflake.snowpark._internal.data_source.drivers.databricks_driver
    - snowflake.snowpark._internal.data_source.drivers.oracledb_driver
    - snowflake.snowpark._internal.data_source.drivers.psycopg2_driver
    - snowflake.snowpark._internal.data_source.drivers.pymsql_driver
    - snowflake.snowpark._internal.data_source.drivers.pyodbc_driver
    - snowflake.snowpark._internal.data_source.drivers.sqlite_driver
    - snowflake.snowpark._internal.data_source.jdbc
    - snowflake.snowpark._internal.data_source.utils
    - snowflake.snowpark._internal.debug_utils
    - snowflake.snowpark._internal.error_message
    - snowflake.snowpark._internal.open_telemetry
    - snowflake.snowpark._internal.packaging_utils
    - snowflake.snowpark._internal.proto.generated
    - snowflake.snowpark._internal.proto.generated.ast_pb2
    - snowflake.snowpark._internal.select_projection_complexity_utils
    - snowflake.snowpark._internal.server_connection
    - snowflake.snowpark._internal.telemetry
    - snowflake.snowpark._internal.temp_table_auto_cleaner
    - snowflake.snowpark._internal.type_utils
    - snowflake.snowpark._internal.udf_utils
    - snowflake.snowpark._internal.utils
    - snowflake.snowpark._internal.xml_reader
    - snowflake.snowpark._internal.xpath_handlers
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    # Requires Snowflake connection to run upstream tests. See: https://github.com/snowflakedb/snowpark-python/blob/v1.40.0/tests/README.md

about:
  home: https://github.com/snowflakedb/snowpark-python
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE.txt
  summary: Snowflake Snowpark Python API
  description: |
    The Snowpark library provides intuitive APIs for querying and
    processing data in a data pipeline. Using this library, you can
    build applications that process data in Snowflake without having
    to move data to the system where your application code runs.
  dev_url: https://github.com/snowflakedb/snowpark-python
  doc_url: https://docs.snowflake.com/en/developer-guide/snowpark/python/index

extra:
  recipe-maintainers:
    - sfc-gh-yixie
    - sfc-gh-achandrasekaran
    - sfc-gh-mkeller