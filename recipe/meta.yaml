{% set name = "snowflake-snowpark-python" %}
{% set version = "1.33.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_') }}-{{ version }}.tar.gz
  sha256: 72eb074f5caf2aa129342a7bb35d5f4525689fee3e72064df843b713859e5720
  url: https://github.com/snowflakedb/snowpark-python/archive/refs/tags/v{{ version }}.tar.gz
  sha256: bd2fc6af481cbfb26c5f3a6f41e6c136d5aca76df125eef575502aeb46140132

build:
  # The build number of this package should always start from 100
  # for new versions. For more information ask the CODEOWNERS.
  number: 100
  skip: true  # [py<39 or py>312]
  script_env:
    - SNOWFLAKE_IS_PYTHON_RUNTIME_TEST=1
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -v

requirements:
  host:
    - python
    - pip
    - setuptools >=40.6.0
    - wheel
    # For the following protobuf pinnings,
    # have a look at their recipe/meta.yaml
    # Snowpark IR
    - protobuf ==3.20.1  # [py<=310]
    - protobuf ==4.25.3  # [py>310]
    - mypy-protobuf
  run:
    - python
    - cloudpickle >=1.6.0,<=3.0.0,!=2.1.0,!=2.2.0
    - snowflake-connector-python >=3.14.0,<4.0.0
    - typing-extensions >=4.1.0,<5.0.0
    - pyyaml
    # Snowpark IR
    - protobuf >=3.20,<6
    - python-dateutil
    - tzlocal
  run_constrained:
    # modin
    - pandas >=1.0.0,<3.0.0
    - modin >=0.32.0,<0.34.0
    # opentelemetry
    - opentelemetry-api >=1.0.0,<2.0.0
    - opentelemetry-sdk >=1.0.0,<2.0.0
    # secure-local-storage
    - keyring >=23.1.0,<26.0.0
    - snowflake-ml-python >=1.8.0  # [py<312]

test:
  requires:
    - pip
  imports:
    - snowflake.snowpark
    - snowflake.snowpark._internal
    - snowflake.snowpark._internal.analyzer
    - snowflake.snowpark._internal.ast
    - snowflake.snowpark._internal.compiler
    - snowflake.snowpark._internal.data_source
    - snowflake.snowpark._internal.data_source.dbms_dialects
    - snowflake.snowpark._internal.data_source.drivers
    - snowflake.snowpark._internal.proto.generated
    - snowflake.snowpark.mock
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    # Requires Snowflake connection to run upstream tests. See: https://github.com/snowflakedb/snowpark-python/blob/v1.33.0/tests/README.md

about:
  home: https://github.com/snowflakedb/snowpark-python
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE.txt
  summary: Snowflake Snowpark Python API
  description: |
    The Snowpark library provides intuitive APIs for querying and
    processing data in a data pipeline. Using this library, you can
    build applications that process data in Snowflake without having
    to move data to the system where your application code runs.
  dev_url: https://github.com/snowflakedb/snowpark-python
  doc_url: https://docs.snowflake.com/en/developer-guide/snowpark/python/index

extra:
  recipe-maintainers:
    - sfc-gh-yixie
    - sfc-gh-achandrasekaran
    - sfc-gh-mkeller